    /* "../vm_test/contracts/intercall.sol":0:87  contract C1 {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x0
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "../vm_test/contracts/intercall.sol":0:87  contract C1 {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x0
  codecopy
  0x0
  return
stop

sub_0: assembly {
        /* "../vm_test/contracts/intercall.sol":0:87  contract C1 {... */
      mstore(0x40, 0x80)
      jumpi(tag_1, lt(calldatasize, 0x4))
      calldataload(0x0)
      0x100000000000000000000000000000000000000000000000000000000
      swap1
      div
      0xffffffff
      and
      dup1
      0xc27fc305
      eq
      tag_2
      jumpi
    tag_1:
      0x0
      dup1
      revert
        /* "../vm_test/contracts/intercall.sol":18:85  function f1() pure public returns(uint) {... */
    tag_2:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_3
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_3:
        /* "../vm_test/contracts/intercall.sol":18:85  function f1() pure public returns(uint) {... */
      pop
      tag_4
      jump(tag_5)
    tag_4:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
    tag_5:
        /* "../vm_test/contracts/intercall.sol":52:56  uint */
      0x0
        /* "../vm_test/contracts/intercall.sol":75:77  10 */
      0xa
        /* "../vm_test/contracts/intercall.sol":68:78  return(10) */
      swap1
      pop
        /* "../vm_test/contracts/intercall.sol":18:85  function f1() pure public returns(uint) {... */
      swap1
      jump	// out

    auxdata: 0xa165627a7a72305820315eccebb6c9df4e819832e6c934b8a8e8554f88e193441e1bb7cfb34d0ac5650029
}
